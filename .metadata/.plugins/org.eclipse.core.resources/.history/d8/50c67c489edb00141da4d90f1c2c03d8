import java.net.Inet4Address;
import java.net.UnknownHostException;

import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.KeeperException.Code;
import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.CreateMode;
import org.apache.zookeeper.ZooDefs.Ids;
import org.apache.zookeeper.data.Stat;
import org.apache.zookeeper.Watcher.Event.EventType;

public class FileServer  implements Runnable{
	String myPath = "/fileServer";
	ZkConnector zkc;
    Watcher watcher;
    
    public static int portNum = 4556;
	static String myIP;
	
	private Thread t;
	
    public static void main(String[] args) throws UnknownHostException {
        
        if (args.length != 1) {
            System.out.println("Usage: java -classpath lib/zookeeper-3.3.2.jar:lib/log4j-1.2.15.jar:. Test zkServer:clientPort");
            return;
        }

        FileServer fs = new FileServer(args[0]);   
        fs.myIP = Inet4Address.getLocalHost().getHostAddress();
        
        // try to become the primary
        fs.checkpath();
    }

    public FileServer(String hosts) {
        zkc = new ZkConnector();
        try {
            zkc.connect(hosts);
        } catch(Exception e) {
            System.out.println("Zookeeper connect "+ e.getMessage());
        }
 
        watcher = new Watcher() { // Anonymous Watcher
                            @Override
                            public void process(WatchedEvent event) {
                                handleEvent(event);
                        
                            } };
    }
    
    private void checkpath(byte[] data) {
        Stat stat = zkc.exists(myPath, watcher);
        if (stat == null) {              // znode doesn't exist; let's try creating it
            System.out.println("Creating " + myPath);
            Code ret = zkc.create(
                        myPath,         // Path of znode
                        data,           // Data needed.
                        CreateMode.EPHEMERAL  // Znode type, set to EPHEMERAL.
                        );
            if (ret == Code.OK) System.out.println("***the boss!***");
            
            // now this is the primary, run as server
            this.start();
        }
    }

    private void handleEvent(WatchedEvent event) {
        String path = event.getPath();
        EventType type = event.getType();
        if(path.equalsIgnoreCase(myPath)) {
            if (type == EventType.NodeDeleted) {
                System.out.println(myPath + " deleted! Let's go!");       
                checkpath(myIP.getBytes()); // try to become the boss
            }
            if (type == EventType.NodeCreated) {
                System.out.println(myPath + " created!");   
                checkpath(myIP.getBytes()); // re-enable the watch
            }
            
            // now this is the primary, run as server
            this.start();
        }
    }

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
	public void start ()
	{
		if (t == null)
		{
			t = new Thread (this);
			t.start ();
		}
	}

}
